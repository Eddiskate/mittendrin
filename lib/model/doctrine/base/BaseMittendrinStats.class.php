<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MittendrinStats', 'doctrine');

/**
 * BaseMittendrinStats
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idmittendrin_stats
 * @property string $ipaddr
 * @property string $open
 * @property string $close
 * @property string $created_at
 * @property string $http_user_agent
 * @property string $city_name
 * @property string $country_name
 * @property integer $radio_station_idradio_station
 * @property RadioStation $RadioStation
 * 
 * @method integer         getIdmittendrinStats()             Returns the current record's "idmittendrin_stats" value
 * @method string          getIpaddr()                        Returns the current record's "ipaddr" value
 * @method string          getOpen()                          Returns the current record's "open" value
 * @method string          getClose()                         Returns the current record's "close" value
 * @method string          getCreatedAt()                     Returns the current record's "created_at" value
 * @method string          getHttpUserAgent()                 Returns the current record's "http_user_agent" value
 * @method string          getCityName()                      Returns the current record's "city_name" value
 * @method string          getCountryName()                   Returns the current record's "country_name" value
 * @method integer         getRadioStationIdradioStation()    Returns the current record's "radio_station_idradio_station" value
 * @method RadioStation    getRadioStation()                  Returns the current record's "RadioStation" value
 * @method MittendrinStats setIdmittendrinStats()             Sets the current record's "idmittendrin_stats" value
 * @method MittendrinStats setIpaddr()                        Sets the current record's "ipaddr" value
 * @method MittendrinStats setOpen()                          Sets the current record's "open" value
 * @method MittendrinStats setClose()                         Sets the current record's "close" value
 * @method MittendrinStats setCreatedAt()                     Sets the current record's "created_at" value
 * @method MittendrinStats setHttpUserAgent()                 Sets the current record's "http_user_agent" value
 * @method MittendrinStats setCityName()                      Sets the current record's "city_name" value
 * @method MittendrinStats setCountryName()                   Sets the current record's "country_name" value
 * @method MittendrinStats setRadioStationIdradioStation()    Sets the current record's "radio_station_idradio_station" value
 * @method MittendrinStats setRadioStation()                  Sets the current record's "RadioStation" value
 * 
 * @package    blackcms
 * @subpackage model
 * @author     Damian Kania @ Eddi blackpage.pl 2012
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMittendrinStats extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('mittendrin_stats');
        $this->hasColumn('idmittendrin_stats', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('ipaddr', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('open', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('close', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('created_at', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('http_user_agent', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('city_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('country_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('radio_station_idradio_station', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('RadioStation', array(
             'local' => 'radio_station_idradio_station',
             'foreign' => 'idradio_station'));
    }
}