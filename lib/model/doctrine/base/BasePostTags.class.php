<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PostTags', 'doctrine');

/**
 * BasePostTags
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idpost_tags
 * @property string $name
 * @property string $name_url
 * @property Doctrine_Collection $PostHasPostTags
 * 
 * @method integer             getIdpostTags()      Returns the current record's "idpost_tags" value
 * @method string              getName()            Returns the current record's "name" value
 * @method string              getNameUrl()         Returns the current record's "name_url" value
 * @method Doctrine_Collection getPostHasPostTags() Returns the current record's "PostHasPostTags" collection
 * @method PostTags            setIdpostTags()      Sets the current record's "idpost_tags" value
 * @method PostTags            setName()            Sets the current record's "name" value
 * @method PostTags            setNameUrl()         Sets the current record's "name_url" value
 * @method PostTags            setPostHasPostTags() Sets the current record's "PostHasPostTags" collection
 * 
 * @package    blackcms
 * @subpackage model
 * @author     Damian Kania @ Eddi blackpage.pl 2012
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePostTags extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('post_tags');
        $this->hasColumn('idpost_tags', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('name_url', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('PostHasPostTags', array(
             'local' => 'idpost_tags',
             'foreign' => 'post_tags_idpost_tags'));
    }
}