<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PostCatalog', 'doctrine');

/**
 * BasePostCatalog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idpost_catalog
 * @property string $name
 * @property integer $publication
 * @property integer $homepage_publication
 * @property integer $homepage_row
 * @property string $font_color
 * @property Doctrine_Collection $BpcmsPostCatalogI18n
 * @property Doctrine_Collection $Post
 * 
 * @method integer             getIdpostCatalog()        Returns the current record's "idpost_catalog" value
 * @method string              getName()                 Returns the current record's "name" value
 * @method integer             getPublication()          Returns the current record's "publication" value
 * @method integer             getHomepagePublication()  Returns the current record's "homepage_publication" value
 * @method integer             getHomepageRow()          Returns the current record's "homepage_row" value
 * @method string              getFontColor()            Returns the current record's "font_color" value
 * @method Doctrine_Collection getBpcmsPostCatalogI18n() Returns the current record's "BpcmsPostCatalogI18n" collection
 * @method Doctrine_Collection getPost()                 Returns the current record's "Post" collection
 * @method PostCatalog         setIdpostCatalog()        Sets the current record's "idpost_catalog" value
 * @method PostCatalog         setName()                 Sets the current record's "name" value
 * @method PostCatalog         setPublication()          Sets the current record's "publication" value
 * @method PostCatalog         setHomepagePublication()  Sets the current record's "homepage_publication" value
 * @method PostCatalog         setHomepageRow()          Sets the current record's "homepage_row" value
 * @method PostCatalog         setFontColor()            Sets the current record's "font_color" value
 * @method PostCatalog         setBpcmsPostCatalogI18n() Sets the current record's "BpcmsPostCatalogI18n" collection
 * @method PostCatalog         setPost()                 Sets the current record's "Post" collection
 * 
 * @package    blackcms
 * @subpackage model
 * @author     Damian Kania @ Eddi blackpage.pl 2012
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePostCatalog extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('post_catalog');
        $this->hasColumn('idpost_catalog', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('publication', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('homepage_publication', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('homepage_row', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('font_color', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('BpcmsPostCatalogI18n', array(
             'local' => 'idpost_catalog',
             'foreign' => 'post_catalog_idpost_catalog'));

        $this->hasMany('Post', array(
             'local' => 'idpost_catalog',
             'foreign' => 'post_catalog_idpost_catalog'));
    }
}