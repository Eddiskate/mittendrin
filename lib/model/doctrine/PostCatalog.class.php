<?php

/**
 * PostCatalog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    blackcms
 * @subpackage model
 * @author     Damian Kania @ Eddi blackpage.pl 2012
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */

sfContext::getInstance()->getConfiguration()->loadHelpers(array('Url'));

class PostCatalog extends BasePostCatalog {

    public function getStatus() {
        $status = new Status(parent::getPublication());

        return $status->getPublication();
    }

    public function getStatusHomepage() {
        $status = new Status(parent::getHomepagePublication());

        return $status->getPublication();
    }

    public function getLinkUrl() {
        $request = sfContext::getInstance()->getRequest();

        $string = 'post_catalog' . ($request->getParameter('culture') ? '_lang?culture=' . $request->getParameter('culture') . '&' : '?') . 'idpost_catalog=' . parent::getIdpostCatalog() . '&name=' . Configuration::getStringAndReplace(self::getLangName());

        return url_for('@' . $string);
    }

    public function getListPost() {
        $post = Doctrine_Core::getTable('Post')->createQuery('a')
                ->where('a.post_catalog_idpost_catalog = ?', parent::getIdpostCatalog())
                ->orderBy('a.created_at DESC')
                ->limit(3)
                ->execute();

        return $post;
    }

    public function getFontColorStyle() {
        if (parent::getFontColor() != '') {
            return ' style="color: ' . parent::getFontColor() . '"';
        }
    }

    public function getLangName()
    {
        $bpcms_post_catalog_i18n = Doctrine_Core::getTable('BpcmsPostCatalogI18n')->createQuery('a')
            ->where('a.post_catalog_idpost_catalog = ?', parent::getIdpostCatalog())
            ->andWhere('a.bpcms_lang_install_signature = ?', sfContext::getInstance()->getRequest()->getParameter('culture') ? sfContext::getInstance()->getRequest()->getParameter('culture') : sfContext::getInstance()->getUser()->getCulture())
            ->fetchOne();

        if ($bpcms_post_catalog_i18n) {
            return $bpcms_post_catalog_i18n->getLangName() ? $bpcms_post_catalog_i18n->getLangName() : parent::getName();
        } else {
            return parent::getName();
        }
    }


}
